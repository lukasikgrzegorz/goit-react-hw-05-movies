{"version":3,"file":"static/js/879.06246c4c.chunk.js","mappings":"sPAsBA,EAnBkB,SAACA,GAOlB,OACC,kBAAMC,SAPc,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOD,MAAME,MAC7BN,EAAMC,SAASG,EAChB,EAG8B,WAC5B,kBAAOG,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAQ,sBAGxB,E,SCkCA,EA5Ce,WACd,OAA4BE,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAE9BC,EAAcF,EAAaG,IAAI,SAE/BC,EAAiB,yCAAG,WAAOb,GAAK,sGAERc,EAAAA,EAAAA,IAAmBd,GAAO,KAAD,EAA/Ce,EAAa,OACnBR,GAAU,OAAIQ,IAAgB,gDAE9BC,QAAQC,IAAI,EAAD,IAAQ,yDAEpB,gBAPsB,sCAgBvB,OAPAC,EAAAA,EAAAA,YAAU,WACTX,EAAU,IACNI,GACHE,EAAkBF,EAEpB,GAAG,CAACA,KAGH,iCACC,SAAC,EAAS,CAACd,SAAU,SAACC,GAAC,OAAKY,EAAgB,CAAEV,MAAOF,GAAI,IACxDQ,EAAOa,OAAS,GAChB,wBACEb,EAAOc,KAAI,SAACC,GACZ,OACC,yBACC,SAAC,KAAI,CAACC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAK,YAAD,OAAchB,IAAiB,SACnEY,EAAMK,SAFAL,EAAME,GAMjB,MAGDZ,IAAe,yDAInB,C,sLC/CMgB,EAAU,mCACVC,EAAW,gCAEJC,EAAmB,yCAAG,2FAC6B,OAAzD5B,EAAM,UAAM2B,EAAQ,sCAA8BD,GAAO,SACxCG,EAAAA,EAAAA,IAAU7B,GAAQ,KAAD,EAA1B,OAAR8B,EAAQ,yBACPA,EAASC,KAAKC,SAAO,2CAC5B,kBAJ+B,mCAMnBnB,EAAkB,yCAAG,WAAOd,GAAK,8EAC0C,OAAjFC,EAAM,UAAM2B,EAAQ,gCAAwBD,EAAO,iCAAyB3B,EAAK,wCAChE8B,EAAAA,EAAAA,IAAU7B,GAAQ,KAAD,EAA1B,OAAR8B,EAAQ,yBACPA,EAASC,KAAKC,SAAO,2CAC5B,gBAJ8B,sCAMlBC,EAAiB,yCAAG,WAAOX,GAAE,8EACe,OAAlDtB,EAAM,UAAM2B,EAAQ,iBAASL,EAAE,oBAAYI,EAAO,4BACjCG,EAAAA,EAAAA,IAAU7B,GAAQ,KAAD,EAA1B,OAAR8B,EAAQ,yBACPA,EAASC,MAAI,2CACpB,gBAJ6B,sCAMjBG,EAAc,yCAAG,WAAOZ,GAAE,8EAC0B,OAA1DtB,EAAM,UAAM2B,EAAQ,iBAASL,EAAE,4BAAoBI,EAAO,4BACzCG,EAAAA,EAAAA,IAAU7B,GAAQ,KAAD,EAA1B,OAAR8B,EAAQ,yBACPA,EAASC,KAAKI,MAAI,2CACzB,gBAJ0B,sCAMdC,EAAiB,yCAAG,WAAOd,GAAE,8EACuB,OAA1DtB,EAAM,UAAM2B,EAAQ,iBAASL,EAAE,4BAAoBI,EAAO,mCACzCG,EAAAA,EAAAA,IAAU7B,GAAQ,KAAD,EAA1B,OAAR8B,EAAQ,yBACPA,EAASC,KAAKC,SAAO,2CAC5B,gBAJ6B,qC","sources":["Components/Searchbar/Searchbar.js","Pages/Movies.js","Services/api.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Searchbar = (props) => {\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst query = e.target.query.value;\r\n\t\tprops.onSubmit(query);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type=\"text\" name=\"query\"></input>\r\n\t\t\t<button type=\"submit\">Search</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nSearchbar.propTypes = {\r\n\tonSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import { useEffect, useState } from \"react\";\r\nimport { fetchMoviesByQuery } from \"../Services/api\";\r\nimport Searchbar from \"../Components/Searchbar/Searchbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst Movies = () => {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [searchParams, setSearchParams] = useSearchParams();\r\n\r\n\tconst actualQuery = searchParams.get(\"query\");\r\n\r\n\tconst showFetchedMovies = async (query) => {\r\n\t\ttry {\r\n\t\t\tconst fetchedMovies = await fetchMoviesByQuery(query);\r\n\t\t\tsetMovies([...fetchedMovies]);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMovies([]);\r\n\t\tif (actualQuery) {\r\n\t\t\tshowFetchedMovies(actualQuery);\r\n\t\t}\r\n\t}, [actualQuery]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Searchbar onSubmit={(e) => setSearchParams({ query: e })}></Searchbar>\r\n\t\t\t{movies.length > 0 ? (\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{movies.map((movie) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={movie.id}>\r\n\t\t\t\t\t\t\t\t<Link to={`${movie.id}`} state={{ from: `/movies/?${searchParams}` }}>\r\n\t\t\t\t\t\t\t\t\t{movie.title}\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t) : (\r\n\t\t\t\tactualQuery && <div>Nothing found. Try again.</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Movies;\r\n","import axios from \"axios\";\r\nconst API_KEY = \"ba9435622413df35cd8d080b147a1f2b\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const fetchTrendingMovies = async () => {\r\n\tconst target = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\r\n\tconst response = await axios.get(target);\r\n\treturn response.data.results;\r\n};\r\n\r\nexport const fetchMoviesByQuery = async (query) => {\r\n\tconst target = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\r\n\tconst response = await axios.get(target);\r\n\treturn response.data.results;\r\n};\r\n\r\nexport const fetchMovieDetails = async (id) => {\r\n\tconst target = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\r\n\tconst response = await axios.get(target);\r\n\treturn response.data;\r\n};\r\n\r\nexport const fetchMovieCast = async (id) => {\r\n\tconst target = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\r\n\tconst response = await axios.get(target);\r\n\treturn response.data.cast;\r\n};\r\n\r\nexport const fetchMovieReviews = async (id) => {\r\n\tconst target = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\r\n\tconst response = await axios.get(target);\r\n\treturn response.data.results;\r\n};\r\n\r\nconst api = {\r\n\tfetchTrendingMovies,\r\n\tfetchMoviesByQuery,\r\n\tfetchMovieDetails,\r\n\tfetchMovieCast,\r\n\tfetchMovieReviews,\r\n};\r\n\r\nexport default api;\r\n"],"names":["props","onSubmit","e","preventDefault","query","target","value","type","name","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","actualQuery","get","showFetchedMovies","fetchMoviesByQuery","fetchedMovies","console","log","useEffect","length","map","movie","to","id","state","from","title","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}