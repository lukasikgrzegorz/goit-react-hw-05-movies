{"version":3,"file":"static/js/845.057fa306.chunk.js","mappings":"gNAsCA,UAlCa,WACZ,OAAgCA,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAEtBC,EAAY,yCAAG,mHAESC,EAAAA,EAAAA,MAAsB,KAAD,EAA3CC,EAAa,OACnBH,EAAYG,GAAe,gDAE3BC,QAAQC,IAAI,EAAD,IAAQ,yDAEpB,kBAPiB,mCAalB,OAJAC,EAAAA,EAAAA,YAAU,WACTL,GACD,GAAG,KAGF,iCACC,4CACA,wBACEF,EAASQ,KAAI,SAACC,GACd,OACC,yBACC,SAAC,KAAI,CAACC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAM,KAAM,SACnDJ,EAAMK,SAFAL,EAAME,GAMjB,QAIJ,C,sLCnCMI,EAAU,mCACVC,EAAW,gCAEJb,EAAmB,yCAAG,2FAC6B,OAAzDc,EAAM,UAAMD,EAAQ,sCAA8BD,GAAO,SACxCG,EAAAA,EAAAA,IAAUD,GAAQ,KAAD,EAA1B,OAARE,EAAQ,yBACPA,EAASC,KAAKC,SAAO,2CAC5B,kBAJ+B,mCAMnBC,EAAkB,yCAAG,WAAOC,GAAK,8EAC0C,OAAjFN,EAAM,UAAMD,EAAQ,gCAAwBD,EAAO,iCAAyBQ,EAAK,wCAChEL,EAAAA,EAAAA,IAAUD,GAAQ,KAAD,EAA1B,OAARE,EAAQ,yBACPA,EAASC,KAAKC,SAAO,2CAC5B,gBAJ8B,sCAMlBG,EAAiB,yCAAG,WAAOb,GAAE,8EACe,OAAlDM,EAAM,UAAMD,EAAQ,iBAASL,EAAE,oBAAYI,EAAO,4BACjCG,EAAAA,EAAAA,IAAUD,GAAQ,KAAD,EAA1B,OAARE,EAAQ,yBACPA,EAASC,MAAI,2CACpB,gBAJ6B,sCAMjBK,EAAc,yCAAG,WAAOd,GAAE,8EAC0B,OAA1DM,EAAM,UAAMD,EAAQ,iBAASL,EAAE,4BAAoBI,EAAO,4BACzCG,EAAAA,EAAAA,IAAUD,GAAQ,KAAD,EAA1B,OAARE,EAAQ,yBACPA,EAASC,KAAKM,MAAI,2CACzB,gBAJ0B,sCAMdC,EAAiB,yCAAG,WAAOhB,GAAE,8EACuB,OAA1DM,EAAM,UAAMD,EAAQ,iBAASL,EAAE,4BAAoBI,EAAO,mCACzCG,EAAAA,EAAAA,IAAUD,GAAQ,KAAD,EAA1B,OAARE,EAAQ,yBACPA,EAASC,KAAKC,SAAO,2CAC5B,gBAJ6B,qC","sources":["Pages/Home.js","Services/api.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchTrendingMovies } from \"../Services/api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n\tconst [trending, setTrending] = useState([]);\r\n\t\r\n\tconst showTrending = async () => {\r\n\t\ttry {\r\n\t\t\tconst fetchedMovies = await fetchTrendingMovies();\r\n\t\t\tsetTrending(fetchedMovies);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tshowTrending();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Tranding today</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t{trending.map((movie) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={movie.id}>\r\n\t\t\t\t\t\t\t<Link to={`movies/${movie.id}`} state={{ from: \"/\" }}>\r\n\t\t\t\t\t\t\t\t{movie.title}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nconst API_KEY = \"ba9435622413df35cd8d080b147a1f2b\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const fetchTrendingMovies = async () => {\r\n\tconst target = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\r\n\tconst response = await axios.get(target);\r\n\treturn response.data.results;\r\n};\r\n\r\nexport const fetchMoviesByQuery = async (query) => {\r\n\tconst target = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\r\n\tconst response = await axios.get(target);\r\n\treturn response.data.results;\r\n};\r\n\r\nexport const fetchMovieDetails = async (id) => {\r\n\tconst target = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\r\n\tconst response = await axios.get(target);\r\n\treturn response.data;\r\n};\r\n\r\nexport const fetchMovieCast = async (id) => {\r\n\tconst target = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\r\n\tconst response = await axios.get(target);\r\n\treturn response.data.cast;\r\n};\r\n\r\nexport const fetchMovieReviews = async (id) => {\r\n\tconst target = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\r\n\tconst response = await axios.get(target);\r\n\treturn response.data.results;\r\n};\r\n\r\nconst api = {\r\n\tfetchTrendingMovies,\r\n\tfetchMoviesByQuery,\r\n\tfetchMovieDetails,\r\n\tfetchMovieCast,\r\n\tfetchMovieReviews,\r\n};\r\n\r\nexport default api;\r\n"],"names":["useState","trending","setTrending","showTrending","fetchTrendingMovies","fetchedMovies","console","log","useEffect","map","movie","to","id","state","from","title","API_KEY","BASE_URL","target","axios","response","data","results","fetchMoviesByQuery","query","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}